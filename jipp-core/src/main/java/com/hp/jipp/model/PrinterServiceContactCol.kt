// Copyright 2024 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2024-10-09
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.model

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "printer-service-contact-col" collection as defined in:
 * [PWG5100.11](https://ftp.pwg.org/pub/pwg/candidates/cs-ippepx20-20240315-5100.11.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class PrinterServiceContactCol
constructor(
    var contactName: String? = null,
    var contactUri: java.net.URI? = null,
    var contactVcard: List<String>? = null,
) : AttributeCollection {

    /** Construct an empty [PrinterServiceContactCol]. */
    constructor() : this(null)

    /** Produce an attribute list from members. */
    override val attributes: List<Attribute<*>>
        get() = listOfNotNull(
            contactName?.let { PrinterServiceContactCol.contactName.of(it) },
            contactUri?.let { PrinterServiceContactCol.contactUri.of(it) },
            contactVcard?.let { PrinterServiceContactCol.contactVcard.of(it.map { v -> Text(v) }) },
        )

    /** Defines types for each member of [PrinterServiceContactCol]. */
    companion object : AttributeCollection.Converter<PrinterServiceContactCol> {
        override fun convert(attributes: List<Attribute<*>>): PrinterServiceContactCol =
            PrinterServiceContactCol(
                extractOne(attributes, contactName)?.value,
                extractOne(attributes, contactUri),
                extractAll(attributes, contactVcard)?.map { it.value },
            )
        override val cls = PrinterServiceContactCol::class.java
        @Deprecated("Remove this symbol")
        @JvmField val Types = this
        @JvmField val contactName = NameType("contact-name")
        @JvmField val contactUri = UriType("contact-uri")
        @JvmField val contactVcard = TextType.Set("contact-vcard")
    }
    override fun toString() = "PrinterServiceContactCol(${attributes.joinToString()})"
}
