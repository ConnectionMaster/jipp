// Copyright 2018 - 2025 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2025-05-13
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.model

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports
import com.hp.jipp.encoding.AttributeGroup.Companion.groupOf

/**
 * Data object corresponding to a "printer-icc-profiles" collection as defined in:
 * [PWG5100.13](https://ftp.pwg.org/pub/pwg/candidates/cs-ippnodriver20-20230301-5100.13.pdf).
 */
@Suppress("RedundantCompanionReference", "unused")
data class PrinterIccProfiles
constructor(
    var profileName: String? = null,
    var profileUrl: java.net.URI? = null,
    /** Additional attributes (see specification for valid values). */
    var extras: AttributeGroup = groupOf(Tag.jobAttributes),
) : AttributeCollection {

    /** Construct an empty [PrinterIccProfiles]. */
    constructor() : this(null)

    /** Produce an attribute list from members. */
    override val attributes: List<Attribute<*>>
        get() = listOfNotNull(
            profileName?.let { PrinterIccProfiles.profileName.of(it) },
            profileUrl?.let { PrinterIccProfiles.profileUrl.of(it) },
        ) + extras

    /** Defines types for each member of [PrinterIccProfiles]. */
    companion object : AttributeCollection.Converter<PrinterIccProfiles> {
        override fun convert(attributes: List<Attribute<*>>): PrinterIccProfiles =
            PrinterIccProfiles(
                extractOne(attributes, profileName)?.value,
                extractOne(attributes, profileUrl),
                groupOf(
                    Tag.jobAttributes,
                    attributes.filterNot { it.name == profileName.name || it.name == profileUrl.name }
                ),
            )
        override val cls = PrinterIccProfiles::class.java
        @Deprecated("Remove this symbol")
        @JvmField val Types = this
        @JvmField val profileName = NameType("profile-name")
        @JvmField val profileUrl = UriType("profile-url")
    }
    override fun toString() = "PrinterIccProfiles(${attributes.joinToString()})"
}
