// Copyright 2018 - 2024 HP Development Company, L.P.
// SPDX-License-Identifier: MIT
//
// DO NOT MODIFY. Code is auto-generated by genTypes.py. Content taken from registry at
// https://www.iana.org/assignments/ipp-registrations/ipp-registrations.xml, updated on 2024-06-13
@file:Suppress("MaxLineLength", "WildcardImport")

package com.hp.jipp.model

import com.hp.jipp.encoding.* // ktlint-disable no-wildcard-imports

/**
 * Data object corresponding to a "job-accounting-sheets" collection as defined in:
 * [PWG5100.3](https://ftp.pwg.org/pub/pwg/candidates/cs-ippprodprint10-20010212-5100.3.pdf),
 * [PWG5100.3-2023](https://ftp.pwg.org/pub/pwg/candidates/cs-ippppx20-20230131-5100.3.pdf),
 * [RFC8011](http://www.iana.org/go/rfc8011).
 */
@Suppress("RedundantCompanionReference", "unused")
data class JobAccountingSheets
constructor(
    /** May contain any keyword from [OutputBin] or a name. */
    var jobAccountingOutputBin: KeywordOrName? = null,
    /** May contain any keyword from [JobAccountingSheetsType] or a name. */
    var jobAccountingSheetsType: KeywordOrName? = null,
    /** May contain any keyword from [Media] or a name. */
    var media: KeywordOrName? = null,
    var mediaCol: MediaCol? = null,
) : AttributeCollection {

    /** Construct an empty [JobAccountingSheets]. */
    constructor() : this(null)

    /** Produce an attribute list from members. */
    override val attributes: List<Attribute<*>>
        get() = listOfNotNull(
            jobAccountingOutputBin?.let { JobAccountingSheets.jobAccountingOutputBin.of(it) },
            jobAccountingSheetsType?.let { JobAccountingSheets.jobAccountingSheetsType.of(it) },
            media?.let { JobAccountingSheets.media.of(it) },
            mediaCol?.let { JobAccountingSheets.mediaCol.of(it) },
        )

    /** Defines types for each member of [JobAccountingSheets]. */
    companion object : AttributeCollection.Converter<JobAccountingSheets> {
        override fun convert(attributes: List<Attribute<*>>): JobAccountingSheets =
            JobAccountingSheets(
                extractOne(attributes, jobAccountingOutputBin),
                extractOne(attributes, jobAccountingSheetsType),
                extractOne(attributes, media),
                extractOne(attributes, mediaCol),
            )
        override val cls = JobAccountingSheets::class.java
        @Deprecated("Remove this symbol")
        @JvmField val Types = this
        @JvmField val jobAccountingOutputBin = KeywordOrNameType("job-accounting-output-bin")
        @JvmField val jobAccountingSheetsType = KeywordOrNameType("job-accounting-sheets-type")
        @JvmField val media = KeywordOrNameType("media")
        @JvmField val mediaCol = AttributeCollection.Type("media-col", MediaCol)
    }
    override fun toString() = "JobAccountingSheets(${attributes.joinToString()})"
}
